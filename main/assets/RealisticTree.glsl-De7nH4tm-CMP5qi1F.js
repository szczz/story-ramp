import{cC as b,gK as $,k0 as E,f_ as W}from"./story-BSn8dUZd.js";import{y as z,i as J}from"./memoryEstimations-iHVpvWPf-DeCWdaPR.js";import{k as R}from"./mat4-BFStKTjU-CckVUlHi.js";import{n as k,a as C}from"./mat4f64-BaJwL7tQ-k0uMm8LY.js";import{P as N,Z as j,N as B,b as H,_ as T,l as X}from"./vec32-BuqRmYBM-fJ1Go0LA.js";import{D as K}from"./vec42-D8CJyqHG-DnfLTeQH.js";import{o as Q}from"./vec4f64-CjUMzAyX-DPYbdAom.js";import{d as g,$ as Z,a as w}from"./sphere-Cj20syUS-DFxQs8pO.js";import{l as M}from"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import{R as q,s as S,w as f}from"./HUDVisibility.glsl-Bl7zdrV0-MU7lhvd7.js";import"./boundedPlane-B6TkXVHT-nRk2Mtao.js";import{aO as F,aC as A}from"./VerticalOffset.glsl-BtVaDxLq-BJdqTL10.js";import{T as Y}from"./VertexAttribute-DFC3a3eR-BhmQtMsu.js";import"./glsl-o28TenZV-B0eZUNn3.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./ShaderBuilder-BkQM64Qp-B8KbVyjs.js";import{O as tt,a as rt,f as et,P as it,j as st}from"./DefaultMaterial-DGGIMylx-CTpj_vJK.js";import"./ShaderOutput-C_OqLoo1-jp3zUBgm.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./NormalAttribute.glsl-C9zbIKka-C50c5yz3.js";import"./renderState-DlSSrLcZ-Du_EmLq6.js";import"./main-evhEtFYV.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./plane-B_adY3_o-CokMJNDw.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./doublePrecisionUtils-BJbYwoii-kIP-tL_t.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./Indices-DkAzsiH--B5a2XPyy.js";import"./orientedBoundingBox-CTsjUkMw-BNSgHqc0.js";import"./quat-D8L_R4I0-OzMeraP9.js";import"./spatialReferenceEllipsoidUtils-DlQOpWof-DP5ttsCl.js";import"./computeTranslationToOriginAndRotation-DwwrTl3S-B-NRiStg.js";import"./projection-m8vi7Cxv-DabLaeW0.js";import"./InterleavedLayout-DcHoXu73-gAshwN4d.js";import"./BufferView-BBCzkcZS-CBnetIvv.js";import"./meshVertexSpaceUtils-BwEbYR8F-DrEhZ7-Z.js";import"./MeshLocalVertexSpace-DFCiKNRA-ByX4RoVJ.js";import"./projectVectorToVector-D0K_S4MR-C72UTjz2.js";import"./projectPointToVector-CG1hALQu-B2iw0lS4.js";import"./hydratedFeatures-BDT5zTGB-FnFE3iun.js";import"./lineSegment-BJNfNZM5-Cq_CP3OB.js";import"./triangle-BePBrXJ8-sKJGInLE.js";import"./lengthUtils-wU9RRIqK-CfCyp1oe.js";import"./requestImageUtils-rT_rMd2F-Cj_04cWc.js";import"./TextureFormat-Cl0ugX3E-DD0Aw8RG.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-DWK_6IB9.js";import"./signal-DxzURL18-BIml8fr1.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";class nt{constructor(t,r,e){this.object=t,this.geometryId=r,this.triangleNr=e}}class ot extends nt{constructor(t,r,e,i){super(t,r,e),this.center=i!=null?W(i):null}}class at{constructor(t){this.layerUid=t}}let lt=class extends at{constructor(s,t){super(s),this.graphicUid=t}};function I(s){return s?.dist!=null}class mt extends lt{constructor(t,r,e,i,n){super(t,r),this.layerUid=t,this.graphicUid=r,this.triangleNr=e,this.baseBoundingSphere=i,this.numLodLevels=n}}const P=1e-5;class ht{constructor(t){this.options=new q,this._results=new ut,this.transform=new F,this.tolerance=P,this.verticalOffset=null,this._ray=g(),this._rayEnd=b(),this._rayBeginTransformed=b(),this._rayEndTransformed=b(),this.viewingMode=t??M.Global}get results(){return this._results}get ray(){return this._ray}get rayBegin(){return this._ray.origin}get rayEnd(){return this._rayEnd}reset(t,r,e){this.resetWithRay(Z(t,r,this._ray),e)}resetWithRay(t,r){this.camera=r,t!==this._ray&&w(t,this._ray),this.options.verticalOffset!==0?this.viewingMode===M.Local?this._ray.origin[2]-=this.options.verticalOffset:this.verticalOffset=this.options.verticalOffset:this.verticalOffset=null,N(this._rayEnd,this._ray.origin,this._ray.direction),this._results.init(this._ray)}intersect(t=null,r,e,i,n){this.point=r,this.filterPredicate=i,this.tolerance=e??P;const o=A(this.verticalOffset);if(t&&t.length>0){const a=n?l=>{n(l)&&this.intersectObject(l)}:l=>{this.intersectObject(l)};for(const l of t){const m=l.getSpatialQueryAccelerator?.();m!=null?(o!=null?m.forEachAlongRayWithVerticalOffset(this._ray.origin,this._ray.direction,a,o):m.forEachAlongRay(this._ray.origin,this._ray.direction,a),this.options.selectionMode&&this.options.hud&&m.forEachDegenerateObject(a)):l.objects.forAll(h=>a(h))}}this.sortResults()}intersectObject(t){const r=t.geometries;if(!r)return;const e=t.effectiveTransformation,i=A(this.verticalOffset);for(const n of r){if(!n.visible)continue;const{material:o,id:a}=n;if(!o.visible)continue;this.transform.setAndInvalidateLazyTransforms(e,n.transformation),j(this._rayBeginTransformed,this.rayBegin,this.transform.inverse),j(this._rayEndTransformed,this.rayEnd,this.transform.inverse);const l=this.transform.transform;i!=null&&(i.objectTransform=this.transform),o.intersect(n,this.transform.transform,this,this._rayBeginTransformed,this._rayEndTransformed,(m,h,c,p,y,L)=>{if(m>=0){if(this.filterPredicate!=null&&!this.filterPredicate(this._ray.origin,this._rayEnd,m))return;const u=p?this._results.hud:this._results,v=p?d=>{const D=new ot(t,a,c,L);d.set(f.HUD,D,m,h,C,y)}:d=>d.set(f.OBJECT,{object:t,geometryId:a,triangleNr:c},m,h,l,y);if((u.min.drapedLayerOrder==null||y>=u.min.drapedLayerOrder)&&(u.min.dist==null||m<u.min.dist)&&v(u.min),this.options.store!==S.MIN&&(u.max.drapedLayerOrder==null||y<u.max.drapedLayerOrder)&&(u.max.dist==null||m>u.max.dist)&&v(u.max),this.options.store===S.ALL)if(p){const d=new G(this._ray);v(d),this._results.hud.all.push(d)}else{const d=new _(this._ray);v(d),this._results.all.push(d)}}})}}sortResults(t=this._results.all){t.sort((r,e)=>r.dist!==e.dist?(r.dist??0)-(e.dist??0):r.drapedLayerOrder!==e.drapedLayerOrder?U(r.drapedLayerOrder,e.drapedLayerOrder):U(r.drapedLayerGraphicOrder,e.drapedLayerGraphicOrder))}}function U(s,t){return(t??-Number.MAX_VALUE)-(s??-Number.MAX_VALUE)}function cr(s){return new ht(s)}class ut{constructor(){this.min=new _(g()),this.max=new _(g()),this.hud={min:new G(g()),max:new G(g()),all:new Array},this.ground=new _(g()),this.all=[]}init(t){this.min.init(t),this.max.init(t),this.ground.init(t),this.all.length=0,this.hud.min.init(t),this.hud.max.init(t),this.hud.all.length=0}}class _{get ray(){return this._ray}get distanceInRenderSpace(){return this.dist!=null?(B(x,this.ray.direction,this.dist),H(x)):null}withinDistance(t){return!!I(this)&&this.distanceInRenderSpace<=t}getIntersectionPoint(t){return!!I(this)&&(B(x,this.ray.direction,this.dist),N(t,this.ray.origin,x),!0)}getTransformedNormal(t){return T(O,this.normal),O[3]=0,K(O,O,this.transformation),T(t,O),X(t,t)}constructor(t){this.intersector=f.OBJECT,this.normal=b(),this.transformation=k(),this._ray=g(),this.init(t)}init(t){this.dist=null,this.target=null,this.drapedLayerOrder=null,this.drapedLayerGraphicOrder=null,this.intersector=f.OBJECT,w(t,this._ray)}set(t,r,e,i,n,o,a){this.intersector=t,this.dist=e,T(this.normal,i??$),R(this.transformation,n??C),this.target=r,this.drapedLayerOrder=o,this.drapedLayerGraphicOrder=a}copy(t){w(t.ray,this._ray),this.intersector=t.intersector,this.dist=t.dist,this.target=t.target,this.drapedLayerOrder=t.drapedLayerOrder,this.drapedLayerGraphicOrder=t.drapedLayerGraphicOrder,T(this.normal,t.normal),R(this.transformation,t.transformation)}}class G extends _{constructor(){super(...arguments),this.intersector=f.HUD}}function ct(s){return new _(s)}const x=b(),O=Q();class dt{constructor(t,r,e,i){this.material=t,this.bufferWriter=t.createBufferWriter(),this.vertexBufferLayout=this.bufferWriter.vertexBufferLayout,this.buffer=r,this.elementCount=e,this.boundingInfo=i}get numTriangles(){return this.elementCount/3}get numVertices(){return this.elementCount}computeUsedMemory(){return this.buffer.byteLength+z}getRenderGeometry(){return this}intersect(t,r,e,i,n,o,a,l){const m=this.bufferWriter,h=this.buffer;m.intersect(h,t,e,i,(c,p,y,L,u)=>V(c,p,y,u,t,r,o,a,n,l))}}class dr{constructor(t){this.engineGeometry=t}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.attributes.get(Y.POSITION).indices.length}get numTriangles(){return this.engineGeometry.indexCount/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce((t,r)=>t+J(r.data,r.indices),0)}getRenderGeometry(){const t=this.material,r=this.engineGeometry,e=r.attributes,i=r.boundingInfo,n=t.createBufferWriter(),o=n.vertexBufferLayout,a=n.elementCount(e),l=o.createBuffer(a);return n.write(null,null,e,null,l,0),new dt(t,l.buffer,a,i)}intersect(t,r,e,i,n,o,a,l){const m=this.engineGeometry;this.material.intersect(m,t.transform.transform,t,e,i,(h,c,p,y,L)=>V(h,c,p,L,t,r,o,a,n,l))}}function V(s,t,r,e,i,n,o,a,l,m){if(s<0||n&&!n(i.rayBegin,i.rayEnd,s))return;const h=new mt(o.layerUid,o.graphicUid(l),r,a,m);if((i.results.min.drapedLayerOrder==null||e>=i.results.min.drapedLayerOrder)&&(i.results.min.dist==null||s<i.results.min.dist)&&i.results.min.set(f.LOD,h,s,t,i.transform.transform,e),i.options.store!==S.MIN&&(i.results.max.drapedLayerOrder==null||e>=i.results.max.drapedLayerOrder)&&(i.results.max.dist==null||s>i.results.max.dist)&&i.results.max.set(f.LOD,h,s,t,i.transform.transform,e),i.options.store===S.ALL){const c=ct(i.results.min.ray);c.set(f.LOD,h,s,t,i.transform.transform,e),i.results.all.push(c)}}class fr{constructor(t,r=null){this.geometry=t,this.textures=r}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}}class pr{constructor(t,r,e){this.components=t,this.minScreenSpaceRadius=r,this.pivotOffset=e;const i=E(this.components.map(n=>n.geometry));this.numVertices=i.reduce((n,o)=>n+o.numVertices,0)}}class yr{constructor(t){this.levels=t,this.levels.sort((r,e)=>r.minScreenSpaceRadius===e.minScreenSpaceRadius?r.numVertices-e.numVertices:r.minScreenSpaceRadius-e.minScreenSpaceRadius)}getMaterials(){const t=[];return this.levels.forEach(r=>r.components.forEach(e=>t.push(e.geometry.material))),E(t)}getTextures(){const t=new Array;return this.levels.forEach(r=>r.components.forEach(e=>{e.textures!=null&&t.push(...e.textures)})),E(t)}getGeometries(){const t=new Array;return this.levels.forEach(r=>r.components.forEach(e=>{t.push(e.geometry)})),E(t)}getEngineGeometries(){return this.getGeometries().map(t=>t.engineGeometry).filter(t=>t!=null)}computeUsedMemory(){const t=this.getGeometries(),r=this.getTextures(),e=t.reduce((i,n)=>i+n.computeUsedMemory(),0);return r.reduce((i,n)=>i+n.memoryEstimate,0)+e}}const gr=Object.freeze(Object.defineProperty({__proto__:null,build:tt},Symbol.toStringTag,{value:"Module"})),_r=Object.freeze(Object.defineProperty({__proto__:null,build:rt,getRadius:et},Symbol.toStringTag,{value:"Module"})),Or=Object.freeze(Object.defineProperty({__proto__:null,build:it},Symbol.toStringTag,{value:"Module"})),br=Object.freeze(Object.defineProperty({__proto__:null,build:st},Symbol.toStringTag,{value:"Module"}));export{Or as D,br as R,gr as S,cr as T,dr as a,_r as b,pr as f,yr as h,fr as l,dt as m};
