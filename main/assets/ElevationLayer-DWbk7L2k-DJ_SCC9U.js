const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./ElevationQuery-DuUlMAmS-Bie_NeNX.js","./story-BSn8dUZd.js","./main-evhEtFYV.js","./main-C9A24L49.css","./story-Dmm6P95U.css","./projection-m8vi7Cxv-DabLaeW0.js","./TileKey-B_6qmYK--BtZdR-Xy.js"])))=>i.map(i=>d[i]);
import{_ as c}from"./main-evhEtFYV.js";import{F as _,c as g,G as w,b as d,e as V,H as m,v as o,I as l,J as y,t as T}from"./story-BSn8dUZd.js";import{o as b,l as D,i as S,X as x}from"./PortalLayer-rRU66wtN-D1HPLT4A.js";import{R as I}from"./HeightModelInfo-BkDck4B0-CbO6BTeV.js";import{U as E}from"./Layer-B8q-l4yV-BhNvh7El.js";import{V as L}from"./ArcGISCachedService-D2QCJMtv-D1DQgfkL.js";import{a as O}from"./ArcGISService-CdvDPeWS-BSchYXbo.js";import{c as N}from"./WorkerHandle-BX4vtQu6-ousUjSvp.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./ElevationInfo-DkWlof50-BTc9ty9m.js";import"./lengthUtils-wU9RRIqK-CfCyp1oe.js";import"./TimeExtent-gZaEUVeW-lmURPZs3.js";import"./PortalItem-CJetnHeq-DR2rD-Wb.js";import"./portalItemUtils-DsrxEt4W-B5iwmhMk.js";import"./projection-m8vi7Cxv-DabLaeW0.js";import"./TileInfo-owTCOSRx-Dq3djO79.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./ByteSizeUnit-DL8UhsB0-B2-AmVRx.js";import"./LRUCache-BLmkvs7b-1i_aXPGT.js";import"./MemCache-BCippCv6-rFeo-JvT.js";import"./memoryEstimations-iHVpvWPf-DeCWdaPR.js";import"./workers-0oosFQiO-D-Zb3MJ8.js";import"./Queue-B8H6jIv7-DermpPUZ.js";import"./intl-DLmy-Li5-DDXPhh_U.js";class j{constructor(e,t,r,s){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=r,this.noDataValue=s)}get hasNoDataValues(){if(this._hasNoDataValues==null){const e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),this._minValue}get maxValue(){return this._ensureBounds(),this._maxValue}get cachedMemory(){return this.values.byteLength+256}_ensureBounds(){if(this._minValue!=null)return;const{noDataValue:e,values:t}=this;let r=1/0,s=-1/0,h=!0;for(const n of t)n===e?this._hasNoDataValues=!0:(r=n<r?n:r,s=n>s?n:s,h=!1);h?(this._minValue=0,this._maxValue=0):(this._minValue=r,this._maxValue=s>-3e38?s:0)}}class v extends N{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,r){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}release(){--this.ref<=0&&(p.forEach((e,t)=>{e===this&&p.delete(t)}),this.destroy())}}const p=new Map;function M(i=null){let e=p.get(i);return e||(i!=null?(e=new v(t=>i.immediate.schedule(t)),p.set(i,e)):(e=new v,p.set(null,e))),++e.ref,e}let a=class extends L(O(b(D(S(E))))){constructor(...i){super(...i),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=M()}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}destroy(){this._lercDecoder=_(this._lercDecoder)}readCapabilities(i,e){const t=e.capabilities&&e.capabilities.split(",").map(r=>r.toLowerCase().trim());return t?{operations:{supportsTileMap:t.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(i,e){let t=e.currentVersion;return t||(t=9.3),t}load(i){const e=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{if(t.typeKeywords){for(let r=0;r<t.typeKeywords.length;r++)if(t.typeKeywords[r].toLowerCase()==="elevation 3d layer")return!0}throw new g("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},i).catch(w).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(i,e,t,r){const s=r?.signal,h={responseType:"array-buffer",signal:s},n={noDataValue:r?.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(i,e,t,r)).then(()=>d(this.getTileUrl(i,e,t),h)).then(u=>this._lercDecoder.decode(u.data,n,s)).then(u=>new j(u))}getTileUrl(i,e,t){const r=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,s=V({...this.parsedUrl.query,blankTile:!r&&null});return`${this.parsedUrl.path}/tile/${i}/${e}/${t}${s?"?"+s:""}`}async queryElevation(i,e){const{ElevationQuery:t}=await c(()=>import("./ElevationQuery-DuUlMAmS-Bie_NeNX.js"),__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url);return m(e),new t().query(this,i,e)}async createElevationSampler(i,e){const{ElevationQuery:t}=await c(()=>import("./ElevationQuery-DuUlMAmS-Bie_NeNX.js"),__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url);return m(e),new t().createSampler(this,i,e)}_fetchTileAvailability(i,e,t,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(i,e,t,r):Promise.resolve("unknown")}async _fetchImageService(i){if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:i},t=await d(this.parsedUrl.path,e);t.ssl&&(this.url=this.url?.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile[f]}};o([l({readOnly:!0})],a.prototype,"capabilities",void 0),o([y("service","capabilities",["capabilities"])],a.prototype,"readCapabilities",null),o([l({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),o([l({readOnly:!0,type:I})],a.prototype,"heightModelInfo",void 0),o([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),o([l({type:["show","hide"]})],a.prototype,"listMode",void 0),o([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"minScale",void 0),o([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"maxScale",void 0),o([l({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),o([l({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),o([l()],a.prototype,"sourceJSON",void 0),o([l({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),o([l(x)],a.prototype,"url",void 0),o([l()],a.prototype,"version",void 0),o([y("version",["currentVersion"])],a.prototype,"readVersion",null),a=o([T("esri.layers.ElevationLayer")],a);const f=Symbol("default-fetch-tile");a.prototype.fetchTile[f]=!0;const ae=a;export{ae as default};
