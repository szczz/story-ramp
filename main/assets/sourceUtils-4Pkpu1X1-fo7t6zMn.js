const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngineJSON-CGn_tfx8-D3N6SheD.js","./geometryEngineBase-DueYg7ux-CCeespPx.js","./_commonjsHelpers-BITg13Vk-KnjfkSck.js","./json-BI97KiBB-Ce5cWfI2.js"])))=>i.map(i=>d[i]);
import{_ as d}from"./main-evhEtFYV.js";import{h as f}from"./date-Cqvy-TgA-DIf-QFLz.js";import{j3 as g,j4 as m,bn as h,ep as y,bm as I,j5 as E,cd as c}from"./story-BSn8dUZd.js";class T{constructor(){this.code=null,this.description=null}}class w{constructor(e){this.error=new T,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function a(t){return new w(t)}class A{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function C(t){return new A(t)}const u=new Set;function q(t,e,n,p=!1){u.clear();for(const o in n){const r=t.get(o);if(!r)continue;const i=N(r,n[o]);if(u.add(r.name),r&&(p||r.editable)){const l=g(r,i);if(l)return a(m(l,r,i));e[r.name]=i}}for(const o of t.requiredFields??[])if(!u.has(o.name))return a(`missing required field "${o.name}"`);return null}function N(t,e){let n=e;return h(t)&&typeof e=="string"?n=parseFloat(e):y(t)&&e!=null&&typeof e!="string"?n=String(e):I(t)&&typeof e=="string"&&(n=f(e)),E(n)}let s;function v(t,e){if(!t||!c(e))return t;if("rings"in t||"paths"in t){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(e,t)}return t}async function _(){return s==null&&(s=await d(()=>import("./geometryEngineJSON-CGn_tfx8-D3N6SheD.js"),__vite__mapDeps([0,1,2,3]),import.meta.url).then(t=>t.g)),s}async function D(t,e){!c(t)||e!=="esriGeometryPolygon"&&e!=="esriGeometryPolyline"||await _()}const P={supportsAutoIntervalBin:!0,supportsFixedIntervalBin:!0,supportsFixedBoundariesBin:!0,supportsDateBin:!0,supportsStackBy:!0,supportsSplitBy:!0,supportsNormalization:!0,supportedStatisticTypes:["COUNT","SUM","AVG","VAR","STDDEV","MIN","MAX","PERCENTILE_CONT","PERCENTILE_DISC","CentroidAggregate","EnvelopeAggregate","ConvexHullAggregate"],supportedNormalizationTypes:["field","log","naturalLog","percentOfTotal","squareRoot"]};export{q as A,v as C,a,D as b,P as q,C as w};
